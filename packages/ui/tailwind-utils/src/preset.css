@keyframes fade-in {
  from { opacity: 0; }
  to   { opacity: 1; }
}
@keyframes fade-out {
  from { opacity: 1; }
  to   { opacity: 0; }
}


@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform:
      translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0)
      scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1))
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform:
      translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0)
      scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1))
      rotate(var(--tw-exit-rotate, 0));
  }
}

@keyframes expand-vertical {
  from {
    height: var(--collapse-from, 0);
    opacity: var(--collapse-opacity-from, 0);
  }
  to {
    height: var(--collapse-to, var(--target-height));
    opacity: var(--collapse-opacity-to, 1);
  }
}

@keyframes collapse-vertical {
  from {
    height: var(--collapse-from, var(--target-height));
    opacity: var(--collapse-opacity-from, 1);
  }
  to {
    height: var(--collapse-to, 0);
    opacity: var(--collapse-opacity-to, 0);
  }
}
  

@utility animate-in {
  animation-name: enter;
  animation-duration: var(--animate-duration, 300ms);
  animation-timing-function: var(--animate-ease, ease-out);
  animation-fill-mode: both;
}

@utility animate-out {
  animation-name: exit;
  animation-duration: var(--animate-duration, 200ms);
  animation-timing-function: var(--animate-ease, ease-in);
  animation-fill-mode: both;
}

@utility slide-in-from-right-*  { --tw-enter-translate-x: calc(--value(integer) * var(--spacing)); }
@utility slide-in-from-left-*   { --tw-enter-translate-x: calc(--value(integer) * var(--spacing) * -1); }
@utility slide-in-from-bottom-* { --tw-enter-translate-y: calc(--value(integer) * var(--spacing)); }
@utility slide-in-from-top-*    { --tw-enter-translate-y: calc(--value(integer) * var(--spacing) * -1); }
@utility slide-out-to-right-*  { --tw-exit-translate-x: calc(--value(integer) * var(--spacing)); }
@utility slide-out-to-left-*   { --tw-exit-translate-x: calc(--value(integer) * var(--spacing) * -1); }
@utility slide-out-to-bottom-* { --tw-exit-translate-y: calc(--value(integer) * var(--spacing)); }
@utility slide-out-to-top-*    { --tw-exit-translate-y: calc(--value(integer) * var(--spacing) * -1); }


/* Radix Collapsible */
@utility animate-radix-collapsible-down {
  --target-height: var(--radix-collapsible-content-height);
  --collapse-from: 0;
  --collapse-to: var(--target-height);
  --collapse-opacity-from: 0;
  --collapse-opacity-to: 1;

  animation-name: expand-vertical;
  animation-duration: var(--animate-duration, 200ms);
  animation-timing-function: var(--animate-ease, ease-out);
  animation-fill-mode: both;
}

@utility animate-radix-collapsible-up {
  --target-height: var(--radix-collapsible-content-height);
  --collapse-from: var(--target-height);
  --collapse-to: 0;
  --collapse-opacity-from: 1;
  --collapse-opacity-to: 0;

  animation-name: collapse-vertical;
  animation-duration: var(--animate-duration, 200ms);
  animation-timing-function: var(--animate-ease, ease-in);
  animation-fill-mode: both;
}

/* Radix Accordion */
@utility animate-radix-accordion-down {
  --target-height: var(--radix-accordion-content-height);
  --collapse-from: 0;
  --collapse-to: var(--target-height);
  --collapse-opacity-from: 0;
  --collapse-opacity-to: 1;

  animation-name: expand-vertical;
  animation-duration: var(--animate-duration, 200ms);
  animation-timing-function: var(--animate-ease, ease-out);
  animation-fill-mode: both;
}

@utility animate-radix-accordion-up {
  --target-height: var(--radix-accordion-content-height);
  --collapse-from: var(--target-height);
  --collapse-to: 0;
  --collapse-opacity-from: 1;
  --collapse-opacity-to: 0;

  animation-name: collapse-vertical;
  animation-duration: var(--animate-duration, 200ms);
  animation-timing-function: var(--animate-ease, ease-in);
  animation-fill-mode: both;
}

/* 퍼센트 값 지원: zoom-in-95 => 0.95 스케일에서 시작해 1로 */
@utility zoom-in-* {
  --tw-enter-scale: calc(var(--value(integer)) / 100);
}

/* 퍼센트 값 지원: zoom-out-95 => 1에서 0.95로 축소되며 종료 */
@utility zoom-out-* {
  --tw-exit-scale: calc(var(--value(integer)) / 100);
}

/* 퍼센트 값 지원: fade-in-95 => 0.95 투명도에서 시작해 1로 */
@utility fade-in-*  { 
  --tw-enter-opacity: calc(var(--value(integer)) / 100); 
} 

/* 퍼센트 값 지원: fade-out-95 => 1에서 0.95로 투명도 축소되며 종료 */
@utility fade-out-* {
   --tw-exit-opacity:  calc(var(--value(integer)) / 100);
} 